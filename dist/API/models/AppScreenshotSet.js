"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppScreenshotSetToJSON = exports.AppScreenshotSetFromJSONTyped = exports.AppScreenshotSetFromJSON = exports.instanceOfAppScreenshotSet = exports.AppScreenshotSetTypeEnum = void 0;
const runtime_1 = require("../runtime");
const AppScreenshotSetAttributes_1 = require("./AppScreenshotSetAttributes");
const AppScreenshotSetRelationships_1 = require("./AppScreenshotSetRelationships");
const ResourceLinks_1 = require("./ResourceLinks");
/**
 * @export
 */
exports.AppScreenshotSetTypeEnum = {
    AppScreenshotSets: 'appScreenshotSets'
};
/**
 * Check if a given object implements the AppScreenshotSet interface.
 */
function instanceOfAppScreenshotSet(value) {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "links" in value;
    return isInstance;
}
exports.instanceOfAppScreenshotSet = instanceOfAppScreenshotSet;
function AppScreenshotSetFromJSON(json) {
    return AppScreenshotSetFromJSONTyped(json, false);
}
exports.AppScreenshotSetFromJSON = AppScreenshotSetFromJSON;
function AppScreenshotSetFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'type': json['type'],
        'id': json['id'],
        'attributes': !(0, runtime_1.exists)(json, 'attributes') ? undefined : (0, AppScreenshotSetAttributes_1.AppScreenshotSetAttributesFromJSON)(json['attributes']),
        'relationships': !(0, runtime_1.exists)(json, 'relationships') ? undefined : (0, AppScreenshotSetRelationships_1.AppScreenshotSetRelationshipsFromJSON)(json['relationships']),
        'links': (0, ResourceLinks_1.ResourceLinksFromJSON)(json['links']),
    };
}
exports.AppScreenshotSetFromJSONTyped = AppScreenshotSetFromJSONTyped;
function AppScreenshotSetToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'type': value.type,
        'id': value.id,
        'attributes': (0, AppScreenshotSetAttributes_1.AppScreenshotSetAttributesToJSON)(value.attributes),
        'relationships': (0, AppScreenshotSetRelationships_1.AppScreenshotSetRelationshipsToJSON)(value.relationships),
        'links': (0, ResourceLinks_1.ResourceLinksToJSON)(value.links),
    };
}
exports.AppScreenshotSetToJSON = AppScreenshotSetToJSON;
//# sourceMappingURL=AppScreenshotSet.js.map