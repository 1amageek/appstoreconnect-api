"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CiMacOsVersionResponseToJSON = exports.CiMacOsVersionResponseFromJSONTyped = exports.CiMacOsVersionResponseFromJSON = exports.instanceOfCiMacOsVersionResponse = void 0;
const runtime_1 = require("../runtime");
const CiMacOsVersion_1 = require("./CiMacOsVersion");
const CiXcodeVersion_1 = require("./CiXcodeVersion");
const DocumentLinks_1 = require("./DocumentLinks");
/**
 * Check if a given object implements the CiMacOsVersionResponse interface.
 */
function instanceOfCiMacOsVersionResponse(value) {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "links" in value;
    return isInstance;
}
exports.instanceOfCiMacOsVersionResponse = instanceOfCiMacOsVersionResponse;
function CiMacOsVersionResponseFromJSON(json) {
    return CiMacOsVersionResponseFromJSONTyped(json, false);
}
exports.CiMacOsVersionResponseFromJSON = CiMacOsVersionResponseFromJSON;
function CiMacOsVersionResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'data': (0, CiMacOsVersion_1.CiMacOsVersionFromJSON)(json['data']),
        'included': !(0, runtime_1.exists)(json, 'included') ? undefined : (json['included'].map(CiXcodeVersion_1.CiXcodeVersionFromJSON)),
        'links': (0, DocumentLinks_1.DocumentLinksFromJSON)(json['links']),
    };
}
exports.CiMacOsVersionResponseFromJSONTyped = CiMacOsVersionResponseFromJSONTyped;
function CiMacOsVersionResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'data': (0, CiMacOsVersion_1.CiMacOsVersionToJSON)(value.data),
        'included': value.included === undefined ? undefined : (value.included.map(CiXcodeVersion_1.CiXcodeVersionToJSON)),
        'links': (0, DocumentLinks_1.DocumentLinksToJSON)(value.links),
    };
}
exports.CiMacOsVersionResponseToJSON = CiMacOsVersionResponseToJSON;
//# sourceMappingURL=CiMacOsVersionResponse.js.map