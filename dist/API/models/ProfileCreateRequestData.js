"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileCreateRequestDataToJSON = exports.ProfileCreateRequestDataFromJSONTyped = exports.ProfileCreateRequestDataFromJSON = exports.instanceOfProfileCreateRequestData = exports.ProfileCreateRequestDataTypeEnum = void 0;
const ProfileCreateRequestDataAttributes_1 = require("./ProfileCreateRequestDataAttributes");
const ProfileCreateRequestDataRelationships_1 = require("./ProfileCreateRequestDataRelationships");
/**
 * @export
 */
exports.ProfileCreateRequestDataTypeEnum = {
    Profiles: 'profiles'
};
/**
 * Check if a given object implements the ProfileCreateRequestData interface.
 */
function instanceOfProfileCreateRequestData(value) {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "attributes" in value;
    isInstance = isInstance && "relationships" in value;
    return isInstance;
}
exports.instanceOfProfileCreateRequestData = instanceOfProfileCreateRequestData;
function ProfileCreateRequestDataFromJSON(json) {
    return ProfileCreateRequestDataFromJSONTyped(json, false);
}
exports.ProfileCreateRequestDataFromJSON = ProfileCreateRequestDataFromJSON;
function ProfileCreateRequestDataFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'type': json['type'],
        'attributes': (0, ProfileCreateRequestDataAttributes_1.ProfileCreateRequestDataAttributesFromJSON)(json['attributes']),
        'relationships': (0, ProfileCreateRequestDataRelationships_1.ProfileCreateRequestDataRelationshipsFromJSON)(json['relationships']),
    };
}
exports.ProfileCreateRequestDataFromJSONTyped = ProfileCreateRequestDataFromJSONTyped;
function ProfileCreateRequestDataToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'type': value.type,
        'attributes': (0, ProfileCreateRequestDataAttributes_1.ProfileCreateRequestDataAttributesToJSON)(value.attributes),
        'relationships': (0, ProfileCreateRequestDataRelationships_1.ProfileCreateRequestDataRelationshipsToJSON)(value.relationships),
    };
}
exports.ProfileCreateRequestDataToJSON = ProfileCreateRequestDataToJSON;
//# sourceMappingURL=ProfileCreateRequestData.js.map