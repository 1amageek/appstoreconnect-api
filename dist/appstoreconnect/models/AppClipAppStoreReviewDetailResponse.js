"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppClipAppStoreReviewDetailResponseToJSON = exports.AppClipAppStoreReviewDetailResponseFromJSONTyped = exports.AppClipAppStoreReviewDetailResponseFromJSON = exports.instanceOfAppClipAppStoreReviewDetailResponse = void 0;
const runtime_1 = require("../runtime");
const AppClipAppStoreReviewDetail_1 = require("./AppClipAppStoreReviewDetail");
const AppClipDefaultExperience_1 = require("./AppClipDefaultExperience");
const DocumentLinks_1 = require("./DocumentLinks");
/**
 * Check if a given object implements the AppClipAppStoreReviewDetailResponse interface.
 */
function instanceOfAppClipAppStoreReviewDetailResponse(value) {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "links" in value;
    return isInstance;
}
exports.instanceOfAppClipAppStoreReviewDetailResponse = instanceOfAppClipAppStoreReviewDetailResponse;
function AppClipAppStoreReviewDetailResponseFromJSON(json) {
    return AppClipAppStoreReviewDetailResponseFromJSONTyped(json, false);
}
exports.AppClipAppStoreReviewDetailResponseFromJSON = AppClipAppStoreReviewDetailResponseFromJSON;
function AppClipAppStoreReviewDetailResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'data': (0, AppClipAppStoreReviewDetail_1.AppClipAppStoreReviewDetailFromJSON)(json['data']),
        'included': !(0, runtime_1.exists)(json, 'included') ? undefined : (json['included'].map(AppClipDefaultExperience_1.AppClipDefaultExperienceFromJSON)),
        'links': (0, DocumentLinks_1.DocumentLinksFromJSON)(json['links']),
    };
}
exports.AppClipAppStoreReviewDetailResponseFromJSONTyped = AppClipAppStoreReviewDetailResponseFromJSONTyped;
function AppClipAppStoreReviewDetailResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'data': (0, AppClipAppStoreReviewDetail_1.AppClipAppStoreReviewDetailToJSON)(value.data),
        'included': value.included === undefined ? undefined : (value.included.map(AppClipDefaultExperience_1.AppClipDefaultExperienceToJSON)),
        'links': (0, DocumentLinks_1.DocumentLinksToJSON)(value.links),
    };
}
exports.AppClipAppStoreReviewDetailResponseToJSON = AppClipAppStoreReviewDetailResponseToJSON;
//# sourceMappingURL=AppClipAppStoreReviewDetailResponse.js.map