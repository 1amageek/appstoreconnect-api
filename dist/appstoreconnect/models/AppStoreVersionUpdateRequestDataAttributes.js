"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppStoreVersionUpdateRequestDataAttributesToJSON = exports.AppStoreVersionUpdateRequestDataAttributesFromJSONTyped = exports.AppStoreVersionUpdateRequestDataAttributesFromJSON = exports.instanceOfAppStoreVersionUpdateRequestDataAttributes = exports.AppStoreVersionUpdateRequestDataAttributesReleaseTypeEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.AppStoreVersionUpdateRequestDataAttributesReleaseTypeEnum = {
    Manual: 'MANUAL',
    AfterApproval: 'AFTER_APPROVAL',
    Scheduled: 'SCHEDULED'
};
/**
 * Check if a given object implements the AppStoreVersionUpdateRequestDataAttributes interface.
 */
function instanceOfAppStoreVersionUpdateRequestDataAttributes(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAppStoreVersionUpdateRequestDataAttributes = instanceOfAppStoreVersionUpdateRequestDataAttributes;
function AppStoreVersionUpdateRequestDataAttributesFromJSON(json) {
    return AppStoreVersionUpdateRequestDataAttributesFromJSONTyped(json, false);
}
exports.AppStoreVersionUpdateRequestDataAttributesFromJSON = AppStoreVersionUpdateRequestDataAttributesFromJSON;
function AppStoreVersionUpdateRequestDataAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'versionString': !(0, runtime_1.exists)(json, 'versionString') ? undefined : json['versionString'],
        'copyright': !(0, runtime_1.exists)(json, 'copyright') ? undefined : json['copyright'],
        'releaseType': !(0, runtime_1.exists)(json, 'releaseType') ? undefined : json['releaseType'],
        'earliestReleaseDate': !(0, runtime_1.exists)(json, 'earliestReleaseDate') ? undefined : (new Date(json['earliestReleaseDate'])),
        'downloadable': !(0, runtime_1.exists)(json, 'downloadable') ? undefined : json['downloadable'],
    };
}
exports.AppStoreVersionUpdateRequestDataAttributesFromJSONTyped = AppStoreVersionUpdateRequestDataAttributesFromJSONTyped;
function AppStoreVersionUpdateRequestDataAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'versionString': value.versionString,
        'copyright': value.copyright,
        'releaseType': value.releaseType,
        'earliestReleaseDate': value.earliestReleaseDate === undefined ? undefined : (value.earliestReleaseDate.toISOString()),
        'downloadable': value.downloadable,
    };
}
exports.AppStoreVersionUpdateRequestDataAttributesToJSON = AppStoreVersionUpdateRequestDataAttributesToJSON;
//# sourceMappingURL=AppStoreVersionUpdateRequestDataAttributes.js.map