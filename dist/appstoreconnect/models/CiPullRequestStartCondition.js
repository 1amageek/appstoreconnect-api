"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CiPullRequestStartConditionToJSON = exports.CiPullRequestStartConditionFromJSONTyped = exports.CiPullRequestStartConditionFromJSON = exports.instanceOfCiPullRequestStartCondition = void 0;
const runtime_1 = require("../runtime");
const CiBranchPatterns_1 = require("./CiBranchPatterns");
const CiFilesAndFoldersRule_1 = require("./CiFilesAndFoldersRule");
/**
 * Check if a given object implements the CiPullRequestStartCondition interface.
 */
function instanceOfCiPullRequestStartCondition(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCiPullRequestStartCondition = instanceOfCiPullRequestStartCondition;
function CiPullRequestStartConditionFromJSON(json) {
    return CiPullRequestStartConditionFromJSONTyped(json, false);
}
exports.CiPullRequestStartConditionFromJSON = CiPullRequestStartConditionFromJSON;
function CiPullRequestStartConditionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'source': !(0, runtime_1.exists)(json, 'source') ? undefined : (0, CiBranchPatterns_1.CiBranchPatternsFromJSON)(json['source']),
        'destination': !(0, runtime_1.exists)(json, 'destination') ? undefined : (0, CiBranchPatterns_1.CiBranchPatternsFromJSON)(json['destination']),
        'filesAndFoldersRule': !(0, runtime_1.exists)(json, 'filesAndFoldersRule') ? undefined : (0, CiFilesAndFoldersRule_1.CiFilesAndFoldersRuleFromJSON)(json['filesAndFoldersRule']),
        'autoCancel': !(0, runtime_1.exists)(json, 'autoCancel') ? undefined : json['autoCancel'],
    };
}
exports.CiPullRequestStartConditionFromJSONTyped = CiPullRequestStartConditionFromJSONTyped;
function CiPullRequestStartConditionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'source': (0, CiBranchPatterns_1.CiBranchPatternsToJSON)(value.source),
        'destination': (0, CiBranchPatterns_1.CiBranchPatternsToJSON)(value.destination),
        'filesAndFoldersRule': (0, CiFilesAndFoldersRule_1.CiFilesAndFoldersRuleToJSON)(value.filesAndFoldersRule),
        'autoCancel': value.autoCancel,
    };
}
exports.CiPullRequestStartConditionToJSON = CiPullRequestStartConditionToJSON;
//# sourceMappingURL=CiPullRequestStartCondition.js.map