"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CiTestDestinationToJSON = exports.CiTestDestinationFromJSONTyped = exports.CiTestDestinationFromJSON = exports.instanceOfCiTestDestination = void 0;
const runtime_1 = require("../runtime");
const CiTestDestinationKind_1 = require("./CiTestDestinationKind");
/**
 * Check if a given object implements the CiTestDestination interface.
 */
function instanceOfCiTestDestination(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCiTestDestination = instanceOfCiTestDestination;
function CiTestDestinationFromJSON(json) {
    return CiTestDestinationFromJSONTyped(json, false);
}
exports.CiTestDestinationFromJSON = CiTestDestinationFromJSON;
function CiTestDestinationFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'deviceTypeName': !(0, runtime_1.exists)(json, 'deviceTypeName') ? undefined : json['deviceTypeName'],
        'deviceTypeIdentifier': !(0, runtime_1.exists)(json, 'deviceTypeIdentifier') ? undefined : json['deviceTypeIdentifier'],
        'runtimeName': !(0, runtime_1.exists)(json, 'runtimeName') ? undefined : json['runtimeName'],
        'runtimeIdentifier': !(0, runtime_1.exists)(json, 'runtimeIdentifier') ? undefined : json['runtimeIdentifier'],
        'kind': !(0, runtime_1.exists)(json, 'kind') ? undefined : (0, CiTestDestinationKind_1.CiTestDestinationKindFromJSON)(json['kind']),
    };
}
exports.CiTestDestinationFromJSONTyped = CiTestDestinationFromJSONTyped;
function CiTestDestinationToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'deviceTypeName': value.deviceTypeName,
        'deviceTypeIdentifier': value.deviceTypeIdentifier,
        'runtimeName': value.runtimeName,
        'runtimeIdentifier': value.runtimeIdentifier,
        'kind': (0, CiTestDestinationKind_1.CiTestDestinationKindToJSON)(value.kind),
    };
}
exports.CiTestDestinationToJSON = CiTestDestinationToJSON;
//# sourceMappingURL=CiTestDestination.js.map