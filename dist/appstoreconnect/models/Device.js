"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceToJSON = exports.DeviceFromJSONTyped = exports.DeviceFromJSON = exports.instanceOfDevice = exports.DeviceTypeEnum = void 0;
const runtime_1 = require("../runtime");
const DeviceAttributes_1 = require("./DeviceAttributes");
const ResourceLinks_1 = require("./ResourceLinks");
/**
 * @export
 */
exports.DeviceTypeEnum = {
    Devices: 'devices'
};
/**
 * Check if a given object implements the Device interface.
 */
function instanceOfDevice(value) {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "links" in value;
    return isInstance;
}
exports.instanceOfDevice = instanceOfDevice;
function DeviceFromJSON(json) {
    return DeviceFromJSONTyped(json, false);
}
exports.DeviceFromJSON = DeviceFromJSON;
function DeviceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'type': json['type'],
        'id': json['id'],
        'attributes': !(0, runtime_1.exists)(json, 'attributes') ? undefined : (0, DeviceAttributes_1.DeviceAttributesFromJSON)(json['attributes']),
        'links': (0, ResourceLinks_1.ResourceLinksFromJSON)(json['links']),
    };
}
exports.DeviceFromJSONTyped = DeviceFromJSONTyped;
function DeviceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'type': value.type,
        'id': value.id,
        'attributes': (0, DeviceAttributes_1.DeviceAttributesToJSON)(value.attributes),
        'links': (0, ResourceLinks_1.ResourceLinksToJSON)(value.links),
    };
}
exports.DeviceToJSON = DeviceToJSON;
//# sourceMappingURL=Device.js.map