"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiagnosticLogsToJSON = exports.DiagnosticLogsFromJSONTyped = exports.DiagnosticLogsFromJSON = exports.instanceOfDiagnosticLogs = void 0;
const runtime_1 = require("../runtime");
const DiagnosticLogsProductDataInner_1 = require("./DiagnosticLogsProductDataInner");
/**
 * Check if a given object implements the DiagnosticLogs interface.
 */
function instanceOfDiagnosticLogs(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfDiagnosticLogs = instanceOfDiagnosticLogs;
function DiagnosticLogsFromJSON(json) {
    return DiagnosticLogsFromJSONTyped(json, false);
}
exports.DiagnosticLogsFromJSON = DiagnosticLogsFromJSON;
function DiagnosticLogsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'productData': !(0, runtime_1.exists)(json, 'productData') ? undefined : (json['productData'].map(DiagnosticLogsProductDataInner_1.DiagnosticLogsProductDataInnerFromJSON)),
        'version': !(0, runtime_1.exists)(json, 'version') ? undefined : json['version'],
    };
}
exports.DiagnosticLogsFromJSONTyped = DiagnosticLogsFromJSONTyped;
function DiagnosticLogsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'productData': value.productData === undefined ? undefined : (value.productData.map(DiagnosticLogsProductDataInner_1.DiagnosticLogsProductDataInnerToJSON)),
        'version': value.version,
    };
}
exports.DiagnosticLogsToJSON = DiagnosticLogsToJSON;
//# sourceMappingURL=DiagnosticLogs.js.map