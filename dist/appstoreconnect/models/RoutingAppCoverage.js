"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingAppCoverageToJSON = exports.RoutingAppCoverageFromJSONTyped = exports.RoutingAppCoverageFromJSON = exports.instanceOfRoutingAppCoverage = exports.RoutingAppCoverageTypeEnum = void 0;
const runtime_1 = require("../runtime");
const AppStoreReviewAttachmentAttributes_1 = require("./AppStoreReviewAttachmentAttributes");
const ResourceLinks_1 = require("./ResourceLinks");
const RoutingAppCoverageRelationships_1 = require("./RoutingAppCoverageRelationships");
/**
 * @export
 */
exports.RoutingAppCoverageTypeEnum = {
    RoutingAppCoverages: 'routingAppCoverages'
};
/**
 * Check if a given object implements the RoutingAppCoverage interface.
 */
function instanceOfRoutingAppCoverage(value) {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "links" in value;
    return isInstance;
}
exports.instanceOfRoutingAppCoverage = instanceOfRoutingAppCoverage;
function RoutingAppCoverageFromJSON(json) {
    return RoutingAppCoverageFromJSONTyped(json, false);
}
exports.RoutingAppCoverageFromJSON = RoutingAppCoverageFromJSON;
function RoutingAppCoverageFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'type': json['type'],
        'id': json['id'],
        'attributes': !(0, runtime_1.exists)(json, 'attributes') ? undefined : (0, AppStoreReviewAttachmentAttributes_1.AppStoreReviewAttachmentAttributesFromJSON)(json['attributes']),
        'relationships': !(0, runtime_1.exists)(json, 'relationships') ? undefined : (0, RoutingAppCoverageRelationships_1.RoutingAppCoverageRelationshipsFromJSON)(json['relationships']),
        'links': (0, ResourceLinks_1.ResourceLinksFromJSON)(json['links']),
    };
}
exports.RoutingAppCoverageFromJSONTyped = RoutingAppCoverageFromJSONTyped;
function RoutingAppCoverageToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'type': value.type,
        'id': value.id,
        'attributes': (0, AppStoreReviewAttachmentAttributes_1.AppStoreReviewAttachmentAttributesToJSON)(value.attributes),
        'relationships': (0, RoutingAppCoverageRelationships_1.RoutingAppCoverageRelationshipsToJSON)(value.relationships),
        'links': (0, ResourceLinks_1.ResourceLinksToJSON)(value.links),
    };
}
exports.RoutingAppCoverageToJSON = RoutingAppCoverageToJSON;
//# sourceMappingURL=RoutingAppCoverage.js.map