/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AppCustomProductPageLocalizationCreateRequest, AppCustomProductPageLocalizationResponse, AppCustomProductPageLocalizationUpdateRequest, AppPreviewSetsResponse, AppScreenshotSetsResponse, ErrorResponse, } from '../models';
import { AppCustomProductPageLocalizationCreateRequestFromJSON, AppCustomProductPageLocalizationCreateRequestToJSON, AppCustomProductPageLocalizationResponseFromJSON, AppCustomProductPageLocalizationResponseToJSON, AppCustomProductPageLocalizationUpdateRequestFromJSON, AppCustomProductPageLocalizationUpdateRequestToJSON, AppPreviewSetsResponseFromJSON, AppPreviewSetsResponseToJSON, AppScreenshotSetsResponseFromJSON, AppScreenshotSetsResponseToJSON, ErrorResponseFromJSON, ErrorResponseToJSON, } from '../models';
export interface AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedRequest {
    id: string;
    filterPreviewType?: Array<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFilterPreviewTypeEnum>;
    filterAppStoreVersionExperimentTreatmentLocalization?: Array<string>;
    filterAppStoreVersionLocalization?: Array<string>;
    fieldsAppCustomProductPageLocalizations?: Array<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppCustomProductPageLocalizationsEnum>;
    fieldsAppStoreVersionExperimentTreatmentLocalizations?: Array<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppStoreVersionExperimentTreatmentLocalizationsEnum>;
    fieldsAppPreviews?: Array<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppPreviewsEnum>;
    fieldsAppPreviewSets?: Array<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppPreviewSetsEnum>;
    fieldsAppStoreVersionLocalizations?: Array<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppStoreVersionLocalizationsEnum>;
    limit?: number;
    limitAppPreviews?: number;
    include?: Array<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedIncludeEnum>;
}
export interface AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedRequest {
    id: string;
    filterScreenshotDisplayType?: Array<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFilterScreenshotDisplayTypeEnum>;
    filterAppStoreVersionExperimentTreatmentLocalization?: Array<string>;
    filterAppStoreVersionLocalization?: Array<string>;
    fieldsAppScreenshotSets?: Array<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppScreenshotSetsEnum>;
    fieldsAppCustomProductPageLocalizations?: Array<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppCustomProductPageLocalizationsEnum>;
    fieldsAppStoreVersionExperimentTreatmentLocalizations?: Array<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppStoreVersionExperimentTreatmentLocalizationsEnum>;
    fieldsAppScreenshots?: Array<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppScreenshotsEnum>;
    fieldsAppStoreVersionLocalizations?: Array<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppStoreVersionLocalizationsEnum>;
    limit?: number;
    limitAppScreenshots?: number;
    include?: Array<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedIncludeEnum>;
}
export interface AppCustomProductPageLocalizationsCreateInstanceRequest {
    appCustomProductPageLocalizationCreateRequest: AppCustomProductPageLocalizationCreateRequest;
}
export interface AppCustomProductPageLocalizationsDeleteInstanceRequest {
    id: string;
}
export interface AppCustomProductPageLocalizationsGetInstanceRequest {
    id: string;
    fieldsAppCustomProductPageLocalizations?: Array<AppCustomProductPageLocalizationsGetInstanceFieldsAppCustomProductPageLocalizationsEnum>;
    include?: Array<AppCustomProductPageLocalizationsGetInstanceIncludeEnum>;
    fieldsAppScreenshotSets?: Array<AppCustomProductPageLocalizationsGetInstanceFieldsAppScreenshotSetsEnum>;
    fieldsAppPreviewSets?: Array<AppCustomProductPageLocalizationsGetInstanceFieldsAppPreviewSetsEnum>;
    limitAppPreviewSets?: number;
    limitAppScreenshotSets?: number;
}
export interface AppCustomProductPageLocalizationsUpdateInstanceRequest {
    id: string;
    appCustomProductPageLocalizationUpdateRequest: AppCustomProductPageLocalizationUpdateRequest;
}
/**
 *
 */
export class AppCustomProductPageLocalizationsApi extends runtime.BaseAPI {
    /**
     */
    async appCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedRaw(requestParameters: AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPreviewSetsResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appCustomProductPageLocalizationsAppPreviewSetsGetToManyRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.filterPreviewType) {
            queryParameters['filter[previewType]'] = requestParameters.filterPreviewType.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.filterAppStoreVersionExperimentTreatmentLocalization) {
            queryParameters['filter[appStoreVersionExperimentTreatmentLocalization]'] = requestParameters.filterAppStoreVersionExperimentTreatmentLocalization.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.filterAppStoreVersionLocalization) {
            queryParameters['filter[appStoreVersionLocalization]'] = requestParameters.filterAppStoreVersionLocalization.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppCustomProductPageLocalizations) {
            queryParameters['fields[appCustomProductPageLocalizations]'] = requestParameters.fieldsAppCustomProductPageLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppStoreVersionExperimentTreatmentLocalizations) {
            queryParameters['fields[appStoreVersionExperimentTreatmentLocalizations]'] = requestParameters.fieldsAppStoreVersionExperimentTreatmentLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppPreviews) {
            queryParameters['fields[appPreviews]'] = requestParameters.fieldsAppPreviews.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppPreviewSets) {
            queryParameters['fields[appPreviewSets]'] = requestParameters.fieldsAppPreviewSets.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppStoreVersionLocalizations) {
            queryParameters['fields[appStoreVersionLocalizations]'] = requestParameters.fieldsAppStoreVersionLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }
        if (requestParameters.limitAppPreviews !== undefined) {
            queryParameters['limit[appPreviews]'] = requestParameters.limitAppPreviews;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCustomProductPageLocalizations/{id}/appPreviewSets`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppPreviewSetsResponseFromJSON(jsonValue));
    }
    /**
     */
    async appCustomProductPageLocalizationsAppPreviewSetsGetToManyRelated(requestParameters: AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPreviewSetsResponse> {
        const response = await this.appCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedRaw(requestParameters: AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppScreenshotSetsResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.filterScreenshotDisplayType) {
            queryParameters['filter[screenshotDisplayType]'] = requestParameters.filterScreenshotDisplayType.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.filterAppStoreVersionExperimentTreatmentLocalization) {
            queryParameters['filter[appStoreVersionExperimentTreatmentLocalization]'] = requestParameters.filterAppStoreVersionExperimentTreatmentLocalization.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.filterAppStoreVersionLocalization) {
            queryParameters['filter[appStoreVersionLocalization]'] = requestParameters.filterAppStoreVersionLocalization.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppScreenshotSets) {
            queryParameters['fields[appScreenshotSets]'] = requestParameters.fieldsAppScreenshotSets.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppCustomProductPageLocalizations) {
            queryParameters['fields[appCustomProductPageLocalizations]'] = requestParameters.fieldsAppCustomProductPageLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppStoreVersionExperimentTreatmentLocalizations) {
            queryParameters['fields[appStoreVersionExperimentTreatmentLocalizations]'] = requestParameters.fieldsAppStoreVersionExperimentTreatmentLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppScreenshots) {
            queryParameters['fields[appScreenshots]'] = requestParameters.fieldsAppScreenshots.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppStoreVersionLocalizations) {
            queryParameters['fields[appStoreVersionLocalizations]'] = requestParameters.fieldsAppStoreVersionLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }
        if (requestParameters.limitAppScreenshots !== undefined) {
            queryParameters['limit[appScreenshots]'] = requestParameters.limitAppScreenshots;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCustomProductPageLocalizations/{id}/appScreenshotSets`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppScreenshotSetsResponseFromJSON(jsonValue));
    }
    /**
     */
    async appCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelated(requestParameters: AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppScreenshotSetsResponse> {
        const response = await this.appCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appCustomProductPageLocalizationsCreateInstanceRaw(requestParameters: AppCustomProductPageLocalizationsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCustomProductPageLocalizationResponse>> {
        if (requestParameters.appCustomProductPageLocalizationCreateRequest === null || requestParameters.appCustomProductPageLocalizationCreateRequest === undefined) {
            throw new runtime.RequiredError('appCustomProductPageLocalizationCreateRequest', 'Required parameter requestParameters.appCustomProductPageLocalizationCreateRequest was null or undefined when calling appCustomProductPageLocalizationsCreateInstance.');
        }
        const queryParameters: any = {};
        const headerParameters: runtime.HTTPHeaders = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCustomProductPageLocalizations`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AppCustomProductPageLocalizationCreateRequestToJSON(requestParameters.appCustomProductPageLocalizationCreateRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCustomProductPageLocalizationResponseFromJSON(jsonValue));
    }
    /**
     */
    async appCustomProductPageLocalizationsCreateInstance(requestParameters: AppCustomProductPageLocalizationsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCustomProductPageLocalizationResponse> {
        const response = await this.appCustomProductPageLocalizationsCreateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appCustomProductPageLocalizationsDeleteInstanceRaw(requestParameters: AppCustomProductPageLocalizationsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appCustomProductPageLocalizationsDeleteInstance.');
        }
        const queryParameters: any = {};
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCustomProductPageLocalizations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async appCustomProductPageLocalizationsDeleteInstance(requestParameters: AppCustomProductPageLocalizationsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.appCustomProductPageLocalizationsDeleteInstanceRaw(requestParameters, initOverrides);
    }
    /**
     */
    async appCustomProductPageLocalizationsGetInstanceRaw(requestParameters: AppCustomProductPageLocalizationsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCustomProductPageLocalizationResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appCustomProductPageLocalizationsGetInstance.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAppCustomProductPageLocalizations) {
            queryParameters['fields[appCustomProductPageLocalizations]'] = requestParameters.fieldsAppCustomProductPageLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppScreenshotSets) {
            queryParameters['fields[appScreenshotSets]'] = requestParameters.fieldsAppScreenshotSets.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppPreviewSets) {
            queryParameters['fields[appPreviewSets]'] = requestParameters.fieldsAppPreviewSets.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitAppPreviewSets !== undefined) {
            queryParameters['limit[appPreviewSets]'] = requestParameters.limitAppPreviewSets;
        }
        if (requestParameters.limitAppScreenshotSets !== undefined) {
            queryParameters['limit[appScreenshotSets]'] = requestParameters.limitAppScreenshotSets;
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCustomProductPageLocalizations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCustomProductPageLocalizationResponseFromJSON(jsonValue));
    }
    /**
     */
    async appCustomProductPageLocalizationsGetInstance(requestParameters: AppCustomProductPageLocalizationsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCustomProductPageLocalizationResponse> {
        const response = await this.appCustomProductPageLocalizationsGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appCustomProductPageLocalizationsUpdateInstanceRaw(requestParameters: AppCustomProductPageLocalizationsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCustomProductPageLocalizationResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appCustomProductPageLocalizationsUpdateInstance.');
        }
        if (requestParameters.appCustomProductPageLocalizationUpdateRequest === null || requestParameters.appCustomProductPageLocalizationUpdateRequest === undefined) {
            throw new runtime.RequiredError('appCustomProductPageLocalizationUpdateRequest', 'Required parameter requestParameters.appCustomProductPageLocalizationUpdateRequest was null or undefined when calling appCustomProductPageLocalizationsUpdateInstance.');
        }
        const queryParameters: any = {};
        const headerParameters: runtime.HTTPHeaders = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCustomProductPageLocalizations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: AppCustomProductPageLocalizationUpdateRequestToJSON(requestParameters.appCustomProductPageLocalizationUpdateRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCustomProductPageLocalizationResponseFromJSON(jsonValue));
    }
    /**
     */
    async appCustomProductPageLocalizationsUpdateInstance(requestParameters: AppCustomProductPageLocalizationsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCustomProductPageLocalizationResponse> {
        const response = await this.appCustomProductPageLocalizationsUpdateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFilterPreviewTypeEnum = 'IPHONE_67' | 'IPHONE_61' | 'IPHONE_65' | 'IPHONE_58' | 'IPHONE_55' | 'IPHONE_47' | 'IPHONE_40' | 'IPHONE_35' | 'IPAD_PRO_3GEN_129' | 'IPAD_PRO_3GEN_11' | 'IPAD_PRO_129' | 'IPAD_105' | 'IPAD_97' | 'DESKTOP' | 'APPLE_TV';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppCustomProductPageLocalizationsEnum = 'appCustomProductPageVersion' | 'appPreviewSets' | 'appScreenshotSets' | 'locale' | 'promotionalText';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppStoreVersionExperimentTreatmentLocalizationsEnum = 'appPreviewSets' | 'appScreenshotSets' | 'appStoreVersionExperimentTreatment' | 'locale';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppPreviewsEnum = 'appPreviewSet' | 'assetDeliveryState' | 'fileName' | 'fileSize' | 'mimeType' | 'previewFrameTimeCode' | 'previewImage' | 'sourceFileChecksum' | 'uploadOperations' | 'uploaded' | 'videoUrl';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppPreviewSetsEnum = 'appCustomProductPageLocalization' | 'appPreviews' | 'appStoreVersionExperimentTreatmentLocalization' | 'appStoreVersionLocalization' | 'previewType';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedFieldsAppStoreVersionLocalizationsEnum = 'appPreviewSets' | 'appScreenshotSets' | 'appStoreVersion' | 'description' | 'keywords' | 'locale' | 'marketingUrl' | 'promotionalText' | 'supportUrl' | 'whatsNew';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedIncludeEnum = 'appCustomProductPageLocalization' | 'appPreviews' | 'appStoreVersionExperimentTreatmentLocalization' | 'appStoreVersionLocalization';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFilterScreenshotDisplayTypeEnum = 'APP_IPHONE_67' | 'APP_IPHONE_61' | 'APP_IPHONE_65' | 'APP_IPHONE_58' | 'APP_IPHONE_55' | 'APP_IPHONE_47' | 'APP_IPHONE_40' | 'APP_IPHONE_35' | 'APP_IPAD_PRO_3GEN_129' | 'APP_IPAD_PRO_3GEN_11' | 'APP_IPAD_PRO_129' | 'APP_IPAD_105' | 'APP_IPAD_97' | 'APP_DESKTOP' | 'APP_WATCH_ULTRA' | 'APP_WATCH_SERIES_7' | 'APP_WATCH_SERIES_4' | 'APP_WATCH_SERIES_3' | 'APP_APPLE_TV' | 'IMESSAGE_APP_IPHONE_67' | 'IMESSAGE_APP_IPHONE_61' | 'IMESSAGE_APP_IPHONE_65' | 'IMESSAGE_APP_IPHONE_58' | 'IMESSAGE_APP_IPHONE_55' | 'IMESSAGE_APP_IPHONE_47' | 'IMESSAGE_APP_IPHONE_40' | 'IMESSAGE_APP_IPAD_PRO_3GEN_129' | 'IMESSAGE_APP_IPAD_PRO_3GEN_11' | 'IMESSAGE_APP_IPAD_PRO_129' | 'IMESSAGE_APP_IPAD_105' | 'IMESSAGE_APP_IPAD_97';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppScreenshotSetsEnum = 'appCustomProductPageLocalization' | 'appScreenshots' | 'appStoreVersionExperimentTreatmentLocalization' | 'appStoreVersionLocalization' | 'screenshotDisplayType';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppCustomProductPageLocalizationsEnum = 'appCustomProductPageVersion' | 'appPreviewSets' | 'appScreenshotSets' | 'locale' | 'promotionalText';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppStoreVersionExperimentTreatmentLocalizationsEnum = 'appPreviewSets' | 'appScreenshotSets' | 'appStoreVersionExperimentTreatment' | 'locale';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppScreenshotsEnum = 'appScreenshotSet' | 'assetDeliveryState' | 'assetToken' | 'assetType' | 'fileName' | 'fileSize' | 'imageAsset' | 'sourceFileChecksum' | 'uploadOperations' | 'uploaded';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedFieldsAppStoreVersionLocalizationsEnum = 'appPreviewSets' | 'appScreenshotSets' | 'appStoreVersion' | 'description' | 'keywords' | 'locale' | 'marketingUrl' | 'promotionalText' | 'supportUrl' | 'whatsNew';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedIncludeEnum = 'appCustomProductPageLocalization' | 'appScreenshots' | 'appStoreVersionExperimentTreatmentLocalization' | 'appStoreVersionLocalization';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsGetInstanceFieldsAppCustomProductPageLocalizationsEnum = 'appCustomProductPageVersion' | 'appPreviewSets' | 'appScreenshotSets' | 'locale' | 'promotionalText';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsGetInstanceIncludeEnum = 'appCustomProductPageVersion' | 'appPreviewSets' | 'appScreenshotSets';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsGetInstanceFieldsAppScreenshotSetsEnum = 'appCustomProductPageLocalization' | 'appScreenshots' | 'appStoreVersionExperimentTreatmentLocalization' | 'appStoreVersionLocalization' | 'screenshotDisplayType';;
/**
 * @export
 */
export type AppCustomProductPageLocalizationsGetInstanceFieldsAppPreviewSetsEnum = 'appCustomProductPageLocalization' | 'appPreviews' | 'appStoreVersionExperimentTreatmentLocalization' | 'appStoreVersionLocalization' | 'previewType';;
