/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AppCustomProductPageLocalizationsResponse, AppCustomProductPageVersionCreateRequest, AppCustomProductPageVersionResponse, ErrorResponse, } from '../models';
import { AppCustomProductPageLocalizationsResponseFromJSON, AppCustomProductPageLocalizationsResponseToJSON, AppCustomProductPageVersionCreateRequestFromJSON, AppCustomProductPageVersionCreateRequestToJSON, AppCustomProductPageVersionResponseFromJSON, AppCustomProductPageVersionResponseToJSON, ErrorResponseFromJSON, ErrorResponseToJSON, } from '../models';
export interface AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedRequest {
    id: string;
    filterLocale?: Array<string>;
    fieldsAppScreenshotSets?: Array<AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedFieldsAppScreenshotSetsEnum>;
    fieldsAppCustomProductPageLocalizations?: Array<AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedFieldsAppCustomProductPageLocalizationsEnum>;
    fieldsAppCustomProductPageVersions?: Array<AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedFieldsAppCustomProductPageVersionsEnum>;
    fieldsAppPreviewSets?: Array<AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedFieldsAppPreviewSetsEnum>;
    limit?: number;
    limitAppScreenshotSets?: number;
    limitAppPreviewSets?: number;
    include?: Array<AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedIncludeEnum>;
}
export interface AppCustomProductPageVersionsCreateInstanceRequest {
    appCustomProductPageVersionCreateRequest: AppCustomProductPageVersionCreateRequest;
}
export interface AppCustomProductPageVersionsGetInstanceRequest {
    id: string;
    fieldsAppCustomProductPageVersions?: Array<AppCustomProductPageVersionsGetInstanceFieldsAppCustomProductPageVersionsEnum>;
    include?: Array<AppCustomProductPageVersionsGetInstanceIncludeEnum>;
    fieldsAppCustomProductPageLocalizations?: Array<AppCustomProductPageVersionsGetInstanceFieldsAppCustomProductPageLocalizationsEnum>;
    limitAppCustomProductPageLocalizations?: number;
}
/**
 *
 */
export class AppCustomProductPageVersionsApi extends runtime.BaseAPI {
    /**
     */
    async appCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedRaw(requestParameters: AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCustomProductPageLocalizationsResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.filterLocale) {
            queryParameters['filter[locale]'] = requestParameters.filterLocale.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppScreenshotSets) {
            queryParameters['fields[appScreenshotSets]'] = requestParameters.fieldsAppScreenshotSets.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppCustomProductPageLocalizations) {
            queryParameters['fields[appCustomProductPageLocalizations]'] = requestParameters.fieldsAppCustomProductPageLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppCustomProductPageVersions) {
            queryParameters['fields[appCustomProductPageVersions]'] = requestParameters.fieldsAppCustomProductPageVersions.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppPreviewSets) {
            queryParameters['fields[appPreviewSets]'] = requestParameters.fieldsAppPreviewSets.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }
        if (requestParameters.limitAppScreenshotSets !== undefined) {
            queryParameters['limit[appScreenshotSets]'] = requestParameters.limitAppScreenshotSets;
        }
        if (requestParameters.limitAppPreviewSets !== undefined) {
            queryParameters['limit[appPreviewSets]'] = requestParameters.limitAppPreviewSets;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCustomProductPageVersions/{id}/appCustomProductPageLocalizations`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCustomProductPageLocalizationsResponseFromJSON(jsonValue));
    }
    /**
     */
    async appCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelated(requestParameters: AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCustomProductPageLocalizationsResponse> {
        const response = await this.appCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appCustomProductPageVersionsCreateInstanceRaw(requestParameters: AppCustomProductPageVersionsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCustomProductPageVersionResponse>> {
        if (requestParameters.appCustomProductPageVersionCreateRequest === null || requestParameters.appCustomProductPageVersionCreateRequest === undefined) {
            throw new runtime.RequiredError('appCustomProductPageVersionCreateRequest', 'Required parameter requestParameters.appCustomProductPageVersionCreateRequest was null or undefined when calling appCustomProductPageVersionsCreateInstance.');
        }
        const queryParameters: any = {};
        const headerParameters: runtime.HTTPHeaders = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCustomProductPageVersions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AppCustomProductPageVersionCreateRequestToJSON(requestParameters.appCustomProductPageVersionCreateRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCustomProductPageVersionResponseFromJSON(jsonValue));
    }
    /**
     */
    async appCustomProductPageVersionsCreateInstance(requestParameters: AppCustomProductPageVersionsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCustomProductPageVersionResponse> {
        const response = await this.appCustomProductPageVersionsCreateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appCustomProductPageVersionsGetInstanceRaw(requestParameters: AppCustomProductPageVersionsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCustomProductPageVersionResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appCustomProductPageVersionsGetInstance.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAppCustomProductPageVersions) {
            queryParameters['fields[appCustomProductPageVersions]'] = requestParameters.fieldsAppCustomProductPageVersions.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppCustomProductPageLocalizations) {
            queryParameters['fields[appCustomProductPageLocalizations]'] = requestParameters.fieldsAppCustomProductPageLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitAppCustomProductPageLocalizations !== undefined) {
            queryParameters['limit[appCustomProductPageLocalizations]'] = requestParameters.limitAppCustomProductPageLocalizations;
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCustomProductPageVersions/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCustomProductPageVersionResponseFromJSON(jsonValue));
    }
    /**
     */
    async appCustomProductPageVersionsGetInstance(requestParameters: AppCustomProductPageVersionsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCustomProductPageVersionResponse> {
        const response = await this.appCustomProductPageVersionsGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
/**
 * @export
 */
export type AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedFieldsAppScreenshotSetsEnum = 'appCustomProductPageLocalization' | 'appScreenshots' | 'appStoreVersionExperimentTreatmentLocalization' | 'appStoreVersionLocalization' | 'screenshotDisplayType';;
/**
 * @export
 */
export type AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedFieldsAppCustomProductPageLocalizationsEnum = 'appCustomProductPageVersion' | 'appPreviewSets' | 'appScreenshotSets' | 'locale' | 'promotionalText';;
/**
 * @export
 */
export type AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedFieldsAppCustomProductPageVersionsEnum = 'appCustomProductPage' | 'appCustomProductPageLocalizations' | 'state' | 'version';;
/**
 * @export
 */
export type AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedFieldsAppPreviewSetsEnum = 'appCustomProductPageLocalization' | 'appPreviews' | 'appStoreVersionExperimentTreatmentLocalization' | 'appStoreVersionLocalization' | 'previewType';;
/**
 * @export
 */
export type AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedIncludeEnum = 'appCustomProductPageVersion' | 'appPreviewSets' | 'appScreenshotSets';;
/**
 * @export
 */
export type AppCustomProductPageVersionsGetInstanceFieldsAppCustomProductPageVersionsEnum = 'appCustomProductPage' | 'appCustomProductPageLocalizations' | 'state' | 'version';;
/**
 * @export
 */
export type AppCustomProductPageVersionsGetInstanceIncludeEnum = 'appCustomProductPage' | 'appCustomProductPageLocalizations';;
/**
 * @export
 */
export type AppCustomProductPageVersionsGetInstanceFieldsAppCustomProductPageLocalizationsEnum = 'appCustomProductPageVersion' | 'appPreviewSets' | 'appScreenshotSets' | 'locale' | 'promotionalText';;
