/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AgeRatingDeclarationResponse, AppCategoryResponse, AppInfoLocalizationsResponse, AppInfoResponse, AppInfoUpdateRequest, ErrorResponse, } from '../models';
import { AgeRatingDeclarationResponseFromJSON, AgeRatingDeclarationResponseToJSON, AppCategoryResponseFromJSON, AppCategoryResponseToJSON, AppInfoLocalizationsResponseFromJSON, AppInfoLocalizationsResponseToJSON, AppInfoResponseFromJSON, AppInfoResponseToJSON, AppInfoUpdateRequestFromJSON, AppInfoUpdateRequestToJSON, ErrorResponseFromJSON, ErrorResponseToJSON, } from '../models';
export interface AppInfosAgeRatingDeclarationGetToOneRelatedRequest {
    id: string;
    fieldsAgeRatingDeclarations?: Array<AppInfosAgeRatingDeclarationGetToOneRelatedFieldsAgeRatingDeclarationsEnum>;
}
export interface AppInfosAppInfoLocalizationsGetToManyRelatedRequest {
    id: string;
    filterLocale?: Array<string>;
    fieldsAppInfos?: Array<AppInfosAppInfoLocalizationsGetToManyRelatedFieldsAppInfosEnum>;
    fieldsAppInfoLocalizations?: Array<AppInfosAppInfoLocalizationsGetToManyRelatedFieldsAppInfoLocalizationsEnum>;
    limit?: number;
    include?: Array<AppInfosAppInfoLocalizationsGetToManyRelatedIncludeEnum>;
}
export interface AppInfosGetInstanceRequest {
    id: string;
    fieldsAppInfos?: Array<AppInfosGetInstanceFieldsAppInfosEnum>;
    include?: Array<AppInfosGetInstanceIncludeEnum>;
    fieldsAgeRatingDeclarations?: Array<AppInfosGetInstanceFieldsAgeRatingDeclarationsEnum>;
    fieldsAppInfoLocalizations?: Array<AppInfosGetInstanceFieldsAppInfoLocalizationsEnum>;
    fieldsAppCategories?: Array<AppInfosGetInstanceFieldsAppCategoriesEnum>;
    limitAppInfoLocalizations?: number;
}
export interface AppInfosPrimaryCategoryGetToOneRelatedRequest {
    id: string;
    fieldsAppCategories?: Array<AppInfosPrimaryCategoryGetToOneRelatedFieldsAppCategoriesEnum>;
    limitSubcategories?: number;
    include?: Array<AppInfosPrimaryCategoryGetToOneRelatedIncludeEnum>;
}
export interface AppInfosPrimarySubcategoryOneGetToOneRelatedRequest {
    id: string;
    fieldsAppCategories?: Array<AppInfosPrimarySubcategoryOneGetToOneRelatedFieldsAppCategoriesEnum>;
    limitSubcategories?: number;
    include?: Array<AppInfosPrimarySubcategoryOneGetToOneRelatedIncludeEnum>;
}
export interface AppInfosPrimarySubcategoryTwoGetToOneRelatedRequest {
    id: string;
    fieldsAppCategories?: Array<AppInfosPrimarySubcategoryTwoGetToOneRelatedFieldsAppCategoriesEnum>;
    limitSubcategories?: number;
    include?: Array<AppInfosPrimarySubcategoryTwoGetToOneRelatedIncludeEnum>;
}
export interface AppInfosSecondaryCategoryGetToOneRelatedRequest {
    id: string;
    fieldsAppCategories?: Array<AppInfosSecondaryCategoryGetToOneRelatedFieldsAppCategoriesEnum>;
    limitSubcategories?: number;
    include?: Array<AppInfosSecondaryCategoryGetToOneRelatedIncludeEnum>;
}
export interface AppInfosSecondarySubcategoryOneGetToOneRelatedRequest {
    id: string;
    fieldsAppCategories?: Array<AppInfosSecondarySubcategoryOneGetToOneRelatedFieldsAppCategoriesEnum>;
    limitSubcategories?: number;
    include?: Array<AppInfosSecondarySubcategoryOneGetToOneRelatedIncludeEnum>;
}
export interface AppInfosSecondarySubcategoryTwoGetToOneRelatedRequest {
    id: string;
    fieldsAppCategories?: Array<AppInfosSecondarySubcategoryTwoGetToOneRelatedFieldsAppCategoriesEnum>;
    limitSubcategories?: number;
    include?: Array<AppInfosSecondarySubcategoryTwoGetToOneRelatedIncludeEnum>;
}
export interface AppInfosUpdateInstanceRequest {
    id: string;
    appInfoUpdateRequest: AppInfoUpdateRequest;
}
/**
 *
 */
export class AppInfosApi extends runtime.BaseAPI {
    /**
     */
    async appInfosAgeRatingDeclarationGetToOneRelatedRaw(requestParameters: AppInfosAgeRatingDeclarationGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgeRatingDeclarationResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosAgeRatingDeclarationGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAgeRatingDeclarations) {
            queryParameters['fields[ageRatingDeclarations]'] = requestParameters.fieldsAgeRatingDeclarations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}/ageRatingDeclaration`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AgeRatingDeclarationResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosAgeRatingDeclarationGetToOneRelated(requestParameters: AppInfosAgeRatingDeclarationGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgeRatingDeclarationResponse> {
        const response = await this.appInfosAgeRatingDeclarationGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appInfosAppInfoLocalizationsGetToManyRelatedRaw(requestParameters: AppInfosAppInfoLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppInfoLocalizationsResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosAppInfoLocalizationsGetToManyRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.filterLocale) {
            queryParameters['filter[locale]'] = requestParameters.filterLocale.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppInfos) {
            queryParameters['fields[appInfos]'] = requestParameters.fieldsAppInfos.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppInfoLocalizations) {
            queryParameters['fields[appInfoLocalizations]'] = requestParameters.fieldsAppInfoLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}/appInfoLocalizations`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppInfoLocalizationsResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosAppInfoLocalizationsGetToManyRelated(requestParameters: AppInfosAppInfoLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppInfoLocalizationsResponse> {
        const response = await this.appInfosAppInfoLocalizationsGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appInfosGetInstanceRaw(requestParameters: AppInfosGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppInfoResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosGetInstance.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAppInfos) {
            queryParameters['fields[appInfos]'] = requestParameters.fieldsAppInfos.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAgeRatingDeclarations) {
            queryParameters['fields[ageRatingDeclarations]'] = requestParameters.fieldsAgeRatingDeclarations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppInfoLocalizations) {
            queryParameters['fields[appInfoLocalizations]'] = requestParameters.fieldsAppInfoLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitAppInfoLocalizations !== undefined) {
            queryParameters['limit[appInfoLocalizations]'] = requestParameters.limitAppInfoLocalizations;
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppInfoResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosGetInstance(requestParameters: AppInfosGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppInfoResponse> {
        const response = await this.appInfosGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appInfosPrimaryCategoryGetToOneRelatedRaw(requestParameters: AppInfosPrimaryCategoryGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoryResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosPrimaryCategoryGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitSubcategories !== undefined) {
            queryParameters['limit[subcategories]'] = requestParameters.limitSubcategories;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}/primaryCategory`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoryResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosPrimaryCategoryGetToOneRelated(requestParameters: AppInfosPrimaryCategoryGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoryResponse> {
        const response = await this.appInfosPrimaryCategoryGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appInfosPrimarySubcategoryOneGetToOneRelatedRaw(requestParameters: AppInfosPrimarySubcategoryOneGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoryResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosPrimarySubcategoryOneGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitSubcategories !== undefined) {
            queryParameters['limit[subcategories]'] = requestParameters.limitSubcategories;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}/primarySubcategoryOne`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoryResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosPrimarySubcategoryOneGetToOneRelated(requestParameters: AppInfosPrimarySubcategoryOneGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoryResponse> {
        const response = await this.appInfosPrimarySubcategoryOneGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appInfosPrimarySubcategoryTwoGetToOneRelatedRaw(requestParameters: AppInfosPrimarySubcategoryTwoGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoryResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosPrimarySubcategoryTwoGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitSubcategories !== undefined) {
            queryParameters['limit[subcategories]'] = requestParameters.limitSubcategories;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}/primarySubcategoryTwo`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoryResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosPrimarySubcategoryTwoGetToOneRelated(requestParameters: AppInfosPrimarySubcategoryTwoGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoryResponse> {
        const response = await this.appInfosPrimarySubcategoryTwoGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appInfosSecondaryCategoryGetToOneRelatedRaw(requestParameters: AppInfosSecondaryCategoryGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoryResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosSecondaryCategoryGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitSubcategories !== undefined) {
            queryParameters['limit[subcategories]'] = requestParameters.limitSubcategories;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}/secondaryCategory`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoryResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosSecondaryCategoryGetToOneRelated(requestParameters: AppInfosSecondaryCategoryGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoryResponse> {
        const response = await this.appInfosSecondaryCategoryGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appInfosSecondarySubcategoryOneGetToOneRelatedRaw(requestParameters: AppInfosSecondarySubcategoryOneGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoryResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosSecondarySubcategoryOneGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitSubcategories !== undefined) {
            queryParameters['limit[subcategories]'] = requestParameters.limitSubcategories;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}/secondarySubcategoryOne`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoryResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosSecondarySubcategoryOneGetToOneRelated(requestParameters: AppInfosSecondarySubcategoryOneGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoryResponse> {
        const response = await this.appInfosSecondarySubcategoryOneGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appInfosSecondarySubcategoryTwoGetToOneRelatedRaw(requestParameters: AppInfosSecondarySubcategoryTwoGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoryResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosSecondarySubcategoryTwoGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitSubcategories !== undefined) {
            queryParameters['limit[subcategories]'] = requestParameters.limitSubcategories;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}/secondarySubcategoryTwo`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoryResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosSecondarySubcategoryTwoGetToOneRelated(requestParameters: AppInfosSecondarySubcategoryTwoGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoryResponse> {
        const response = await this.appInfosSecondarySubcategoryTwoGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async appInfosUpdateInstanceRaw(requestParameters: AppInfosUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppInfoResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling appInfosUpdateInstance.');
        }
        if (requestParameters.appInfoUpdateRequest === null || requestParameters.appInfoUpdateRequest === undefined) {
            throw new runtime.RequiredError('appInfoUpdateRequest', 'Required parameter requestParameters.appInfoUpdateRequest was null or undefined when calling appInfosUpdateInstance.');
        }
        const queryParameters: any = {};
        const headerParameters: runtime.HTTPHeaders = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appInfos/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: AppInfoUpdateRequestToJSON(requestParameters.appInfoUpdateRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => AppInfoResponseFromJSON(jsonValue));
    }
    /**
     */
    async appInfosUpdateInstance(requestParameters: AppInfosUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppInfoResponse> {
        const response = await this.appInfosUpdateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
/**
 * @export
 */
export type AppInfosAgeRatingDeclarationGetToOneRelatedFieldsAgeRatingDeclarationsEnum = 'alcoholTobaccoOrDrugUseOrReferences' | 'contests' | 'gambling' | 'gamblingAndContests' | 'gamblingSimulated' | 'horrorOrFearThemes' | 'kidsAgeBand' | 'matureOrSuggestiveThemes' | 'medicalOrTreatmentInformation' | 'profanityOrCrudeHumor' | 'seventeenPlus' | 'sexualContentGraphicAndNudity' | 'sexualContentOrNudity' | 'unrestrictedWebAccess' | 'violenceCartoonOrFantasy' | 'violenceRealistic' | 'violenceRealisticProlongedGraphicOrSadistic';;
/**
 * @export
 */
export type AppInfosAppInfoLocalizationsGetToManyRelatedFieldsAppInfosEnum = 'ageRatingDeclaration' | 'app' | 'appInfoLocalizations' | 'appStoreAgeRating' | 'appStoreState' | 'brazilAgeRating' | 'brazilAgeRatingV2' | 'kidsAgeBand' | 'primaryCategory' | 'primarySubcategoryOne' | 'primarySubcategoryTwo' | 'secondaryCategory' | 'secondarySubcategoryOne' | 'secondarySubcategoryTwo';;
/**
 * @export
 */
export type AppInfosAppInfoLocalizationsGetToManyRelatedFieldsAppInfoLocalizationsEnum = 'appInfo' | 'locale' | 'name' | 'privacyChoicesUrl' | 'privacyPolicyText' | 'privacyPolicyUrl' | 'subtitle';;
/**
 * @export
 */
export type AppInfosAppInfoLocalizationsGetToManyRelatedIncludeEnum = 'appInfo';;
/**
 * @export
 */
export type AppInfosGetInstanceFieldsAppInfosEnum = 'ageRatingDeclaration' | 'app' | 'appInfoLocalizations' | 'appStoreAgeRating' | 'appStoreState' | 'brazilAgeRating' | 'brazilAgeRatingV2' | 'kidsAgeBand' | 'primaryCategory' | 'primarySubcategoryOne' | 'primarySubcategoryTwo' | 'secondaryCategory' | 'secondarySubcategoryOne' | 'secondarySubcategoryTwo';;
/**
 * @export
 */
export type AppInfosGetInstanceIncludeEnum = 'ageRatingDeclaration' | 'app' | 'appInfoLocalizations' | 'primaryCategory' | 'primarySubcategoryOne' | 'primarySubcategoryTwo' | 'secondaryCategory' | 'secondarySubcategoryOne' | 'secondarySubcategoryTwo';;
/**
 * @export
 */
export type AppInfosGetInstanceFieldsAgeRatingDeclarationsEnum = 'alcoholTobaccoOrDrugUseOrReferences' | 'contests' | 'gambling' | 'gamblingAndContests' | 'gamblingSimulated' | 'horrorOrFearThemes' | 'kidsAgeBand' | 'matureOrSuggestiveThemes' | 'medicalOrTreatmentInformation' | 'profanityOrCrudeHumor' | 'seventeenPlus' | 'sexualContentGraphicAndNudity' | 'sexualContentOrNudity' | 'unrestrictedWebAccess' | 'violenceCartoonOrFantasy' | 'violenceRealistic' | 'violenceRealisticProlongedGraphicOrSadistic';;
/**
 * @export
 */
export type AppInfosGetInstanceFieldsAppInfoLocalizationsEnum = 'appInfo' | 'locale' | 'name' | 'privacyChoicesUrl' | 'privacyPolicyText' | 'privacyPolicyUrl' | 'subtitle';;
/**
 * @export
 */
export type AppInfosGetInstanceFieldsAppCategoriesEnum = 'parent' | 'platforms' | 'subcategories';;
/**
 * @export
 */
export type AppInfosPrimaryCategoryGetToOneRelatedFieldsAppCategoriesEnum = 'parent' | 'platforms' | 'subcategories';;
/**
 * @export
 */
export type AppInfosPrimaryCategoryGetToOneRelatedIncludeEnum = 'parent' | 'subcategories';;
/**
 * @export
 */
export type AppInfosPrimarySubcategoryOneGetToOneRelatedFieldsAppCategoriesEnum = 'parent' | 'platforms' | 'subcategories';;
/**
 * @export
 */
export type AppInfosPrimarySubcategoryOneGetToOneRelatedIncludeEnum = 'parent' | 'subcategories';;
/**
 * @export
 */
export type AppInfosPrimarySubcategoryTwoGetToOneRelatedFieldsAppCategoriesEnum = 'parent' | 'platforms' | 'subcategories';;
/**
 * @export
 */
export type AppInfosPrimarySubcategoryTwoGetToOneRelatedIncludeEnum = 'parent' | 'subcategories';;
/**
 * @export
 */
export type AppInfosSecondaryCategoryGetToOneRelatedFieldsAppCategoriesEnum = 'parent' | 'platforms' | 'subcategories';;
/**
 * @export
 */
export type AppInfosSecondaryCategoryGetToOneRelatedIncludeEnum = 'parent' | 'subcategories';;
/**
 * @export
 */
export type AppInfosSecondarySubcategoryOneGetToOneRelatedFieldsAppCategoriesEnum = 'parent' | 'platforms' | 'subcategories';;
/**
 * @export
 */
export type AppInfosSecondarySubcategoryOneGetToOneRelatedIncludeEnum = 'parent' | 'subcategories';;
/**
 * @export
 */
export type AppInfosSecondarySubcategoryTwoGetToOneRelatedFieldsAppCategoriesEnum = 'parent' | 'platforms' | 'subcategories';;
/**
 * @export
 */
export type AppInfosSecondarySubcategoryTwoGetToOneRelatedIncludeEnum = 'parent' | 'subcategories';;
