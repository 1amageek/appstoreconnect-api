/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ErrorResponse, InAppPurchaseAppStoreReviewScreenshotResponse, InAppPurchaseContentResponse, InAppPurchaseLocalizationsResponse, InAppPurchasePricePointsResponse, InAppPurchasePriceScheduleResponse, InAppPurchaseV2CreateRequest, InAppPurchaseV2Response, InAppPurchaseV2UpdateRequest, PromotedPurchaseResponse, } from '../models';
import { ErrorResponseFromJSON, ErrorResponseToJSON, InAppPurchaseAppStoreReviewScreenshotResponseFromJSON, InAppPurchaseAppStoreReviewScreenshotResponseToJSON, InAppPurchaseContentResponseFromJSON, InAppPurchaseContentResponseToJSON, InAppPurchaseLocalizationsResponseFromJSON, InAppPurchaseLocalizationsResponseToJSON, InAppPurchasePricePointsResponseFromJSON, InAppPurchasePricePointsResponseToJSON, InAppPurchasePriceScheduleResponseFromJSON, InAppPurchasePriceScheduleResponseToJSON, InAppPurchaseV2CreateRequestFromJSON, InAppPurchaseV2CreateRequestToJSON, InAppPurchaseV2ResponseFromJSON, InAppPurchaseV2ResponseToJSON, InAppPurchaseV2UpdateRequestFromJSON, InAppPurchaseV2UpdateRequestToJSON, PromotedPurchaseResponseFromJSON, PromotedPurchaseResponseToJSON, } from '../models';
export interface InAppPurchasesAppStoreReviewScreenshotGetToOneRelatedRequest {
    id: string;
    fieldsInAppPurchaseAppStoreReviewScreenshots?: Array<InAppPurchasesAppStoreReviewScreenshotGetToOneRelatedFieldsInAppPurchaseAppStoreReviewScreenshotsEnum>;
    fieldsInAppPurchases?: Array<InAppPurchasesAppStoreReviewScreenshotGetToOneRelatedFieldsInAppPurchasesEnum>;
    include?: Array<InAppPurchasesAppStoreReviewScreenshotGetToOneRelatedIncludeEnum>;
}
export interface InAppPurchasesContentGetToOneRelatedRequest {
    id: string;
    fieldsInAppPurchases?: Array<InAppPurchasesContentGetToOneRelatedFieldsInAppPurchasesEnum>;
    fieldsInAppPurchaseContents?: Array<InAppPurchasesContentGetToOneRelatedFieldsInAppPurchaseContentsEnum>;
    include?: Array<InAppPurchasesContentGetToOneRelatedIncludeEnum>;
}
export interface InAppPurchasesCreateInstanceRequest {
    inAppPurchaseV2CreateRequest: InAppPurchaseV2CreateRequest;
}
export interface InAppPurchasesDeleteInstanceRequest {
    id: string;
}
export interface InAppPurchasesGetInstanceRequest {
    id: string;
    fieldsInAppPurchases?: Array<InAppPurchasesGetInstanceFieldsInAppPurchasesEnum>;
    include?: Array<InAppPurchasesGetInstanceIncludeEnum>;
    fieldsInAppPurchaseAppStoreReviewScreenshots?: Array<InAppPurchasesGetInstanceFieldsInAppPurchaseAppStoreReviewScreenshotsEnum>;
    fieldsPromotedPurchases?: Array<InAppPurchasesGetInstanceFieldsPromotedPurchasesEnum>;
    fieldsInAppPurchasePricePoints?: Array<InAppPurchasesGetInstanceFieldsInAppPurchasePricePointsEnum>;
    fieldsInAppPurchaseLocalizations?: Array<InAppPurchasesGetInstanceFieldsInAppPurchaseLocalizationsEnum>;
    fieldsInAppPurchasePriceSchedules?: Array<InAppPurchasesGetInstanceFieldsInAppPurchasePriceSchedulesEnum>;
    fieldsInAppPurchaseContents?: Array<InAppPurchasesGetInstanceFieldsInAppPurchaseContentsEnum>;
    limitInAppPurchaseLocalizations?: number;
    limitPricePoints?: number;
}
export interface InAppPurchasesIapPriceScheduleGetToOneRelatedRequest {
    id: string;
    fieldsInAppPurchasePrices?: Array<InAppPurchasesIapPriceScheduleGetToOneRelatedFieldsInAppPurchasePricesEnum>;
    fieldsInAppPurchases?: Array<InAppPurchasesIapPriceScheduleGetToOneRelatedFieldsInAppPurchasesEnum>;
    fieldsInAppPurchasePriceSchedules?: Array<InAppPurchasesIapPriceScheduleGetToOneRelatedFieldsInAppPurchasePriceSchedulesEnum>;
    fieldsTerritories?: Array<InAppPurchasesIapPriceScheduleGetToOneRelatedFieldsTerritoriesEnum>;
    limitManualPrices?: number;
    limitAutomaticPrices?: number;
    include?: Array<InAppPurchasesIapPriceScheduleGetToOneRelatedIncludeEnum>;
}
export interface InAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedRequest {
    id: string;
    fieldsInAppPurchaseLocalizations?: Array<InAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedFieldsInAppPurchaseLocalizationsEnum>;
    fieldsInAppPurchases?: Array<InAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedFieldsInAppPurchasesEnum>;
    limit?: number;
    include?: Array<InAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedIncludeEnum>;
}
export interface InAppPurchasesPricePointsGetToManyRelatedRequest {
    id: string;
    filterPriceTier?: Array<string>;
    filterTerritory?: Array<string>;
    fieldsInAppPurchasePricePoints?: Array<InAppPurchasesPricePointsGetToManyRelatedFieldsInAppPurchasePricePointsEnum>;
    fieldsTerritories?: Array<InAppPurchasesPricePointsGetToManyRelatedFieldsTerritoriesEnum>;
    limit?: number;
    include?: Array<InAppPurchasesPricePointsGetToManyRelatedIncludeEnum>;
}
export interface InAppPurchasesPromotedPurchaseGetToOneRelatedRequest {
    id: string;
    fieldsPromotedPurchases?: Array<InAppPurchasesPromotedPurchaseGetToOneRelatedFieldsPromotedPurchasesEnum>;
    fieldsSubscriptions?: Array<InAppPurchasesPromotedPurchaseGetToOneRelatedFieldsSubscriptionsEnum>;
    fieldsInAppPurchases?: Array<InAppPurchasesPromotedPurchaseGetToOneRelatedFieldsInAppPurchasesEnum>;
    fieldsPromotedPurchaseImages?: Array<InAppPurchasesPromotedPurchaseGetToOneRelatedFieldsPromotedPurchaseImagesEnum>;
    limitPromotionImages?: number;
    include?: Array<InAppPurchasesPromotedPurchaseGetToOneRelatedIncludeEnum>;
}
export interface InAppPurchasesUpdateInstanceRequest {
    id: string;
    inAppPurchaseV2UpdateRequest: InAppPurchaseV2UpdateRequest;
}
/**
 *
 */
export class InAppPurchasesApi extends runtime.BaseAPI {
    /**
     */
    async inAppPurchasesAppStoreReviewScreenshotGetToOneRelatedRaw(requestParameters: InAppPurchasesAppStoreReviewScreenshotGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InAppPurchaseAppStoreReviewScreenshotResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling inAppPurchasesAppStoreReviewScreenshotGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsInAppPurchaseAppStoreReviewScreenshots) {
            queryParameters['fields[inAppPurchaseAppStoreReviewScreenshots]'] = requestParameters.fieldsInAppPurchaseAppStoreReviewScreenshots.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchases) {
            queryParameters['fields[inAppPurchases]'] = requestParameters.fieldsInAppPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases/{id}/appStoreReviewScreenshot`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => InAppPurchaseAppStoreReviewScreenshotResponseFromJSON(jsonValue));
    }
    /**
     */
    async inAppPurchasesAppStoreReviewScreenshotGetToOneRelated(requestParameters: InAppPurchasesAppStoreReviewScreenshotGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InAppPurchaseAppStoreReviewScreenshotResponse> {
        const response = await this.inAppPurchasesAppStoreReviewScreenshotGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async inAppPurchasesContentGetToOneRelatedRaw(requestParameters: InAppPurchasesContentGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InAppPurchaseContentResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling inAppPurchasesContentGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsInAppPurchases) {
            queryParameters['fields[inAppPurchases]'] = requestParameters.fieldsInAppPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchaseContents) {
            queryParameters['fields[inAppPurchaseContents]'] = requestParameters.fieldsInAppPurchaseContents.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases/{id}/content`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => InAppPurchaseContentResponseFromJSON(jsonValue));
    }
    /**
     */
    async inAppPurchasesContentGetToOneRelated(requestParameters: InAppPurchasesContentGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InAppPurchaseContentResponse> {
        const response = await this.inAppPurchasesContentGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async inAppPurchasesCreateInstanceRaw(requestParameters: InAppPurchasesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InAppPurchaseV2Response>> {
        if (requestParameters.inAppPurchaseV2CreateRequest === null || requestParameters.inAppPurchaseV2CreateRequest === undefined) {
            throw new runtime.RequiredError('inAppPurchaseV2CreateRequest', 'Required parameter requestParameters.inAppPurchaseV2CreateRequest was null or undefined when calling inAppPurchasesCreateInstance.');
        }
        const queryParameters: any = {};
        const headerParameters: runtime.HTTPHeaders = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InAppPurchaseV2CreateRequestToJSON(requestParameters.inAppPurchaseV2CreateRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => InAppPurchaseV2ResponseFromJSON(jsonValue));
    }
    /**
     */
    async inAppPurchasesCreateInstance(requestParameters: InAppPurchasesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InAppPurchaseV2Response> {
        const response = await this.inAppPurchasesCreateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async inAppPurchasesDeleteInstanceRaw(requestParameters: InAppPurchasesDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling inAppPurchasesDeleteInstance.');
        }
        const queryParameters: any = {};
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async inAppPurchasesDeleteInstance(requestParameters: InAppPurchasesDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.inAppPurchasesDeleteInstanceRaw(requestParameters, initOverrides);
    }
    /**
     */
    async inAppPurchasesGetInstanceRaw(requestParameters: InAppPurchasesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InAppPurchaseV2Response>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling inAppPurchasesGetInstance.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsInAppPurchases) {
            queryParameters['fields[inAppPurchases]'] = requestParameters.fieldsInAppPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchaseAppStoreReviewScreenshots) {
            queryParameters['fields[inAppPurchaseAppStoreReviewScreenshots]'] = requestParameters.fieldsInAppPurchaseAppStoreReviewScreenshots.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsPromotedPurchases) {
            queryParameters['fields[promotedPurchases]'] = requestParameters.fieldsPromotedPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchasePricePoints) {
            queryParameters['fields[inAppPurchasePricePoints]'] = requestParameters.fieldsInAppPurchasePricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchaseLocalizations) {
            queryParameters['fields[inAppPurchaseLocalizations]'] = requestParameters.fieldsInAppPurchaseLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchasePriceSchedules) {
            queryParameters['fields[inAppPurchasePriceSchedules]'] = requestParameters.fieldsInAppPurchasePriceSchedules.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchaseContents) {
            queryParameters['fields[inAppPurchaseContents]'] = requestParameters.fieldsInAppPurchaseContents.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitInAppPurchaseLocalizations !== undefined) {
            queryParameters['limit[inAppPurchaseLocalizations]'] = requestParameters.limitInAppPurchaseLocalizations;
        }
        if (requestParameters.limitPricePoints !== undefined) {
            queryParameters['limit[pricePoints]'] = requestParameters.limitPricePoints;
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => InAppPurchaseV2ResponseFromJSON(jsonValue));
    }
    /**
     */
    async inAppPurchasesGetInstance(requestParameters: InAppPurchasesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InAppPurchaseV2Response> {
        const response = await this.inAppPurchasesGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async inAppPurchasesIapPriceScheduleGetToOneRelatedRaw(requestParameters: InAppPurchasesIapPriceScheduleGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InAppPurchasePriceScheduleResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling inAppPurchasesIapPriceScheduleGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsInAppPurchasePrices) {
            queryParameters['fields[inAppPurchasePrices]'] = requestParameters.fieldsInAppPurchasePrices.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchases) {
            queryParameters['fields[inAppPurchases]'] = requestParameters.fieldsInAppPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchasePriceSchedules) {
            queryParameters['fields[inAppPurchasePriceSchedules]'] = requestParameters.fieldsInAppPurchasePriceSchedules.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsTerritories) {
            queryParameters['fields[territories]'] = requestParameters.fieldsTerritories.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitManualPrices !== undefined) {
            queryParameters['limit[manualPrices]'] = requestParameters.limitManualPrices;
        }
        if (requestParameters.limitAutomaticPrices !== undefined) {
            queryParameters['limit[automaticPrices]'] = requestParameters.limitAutomaticPrices;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases/{id}/iapPriceSchedule`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => InAppPurchasePriceScheduleResponseFromJSON(jsonValue));
    }
    /**
     */
    async inAppPurchasesIapPriceScheduleGetToOneRelated(requestParameters: InAppPurchasesIapPriceScheduleGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InAppPurchasePriceScheduleResponse> {
        const response = await this.inAppPurchasesIapPriceScheduleGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async inAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedRaw(requestParameters: InAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InAppPurchaseLocalizationsResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling inAppPurchasesInAppPurchaseLocalizationsGetToManyRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsInAppPurchaseLocalizations) {
            queryParameters['fields[inAppPurchaseLocalizations]'] = requestParameters.fieldsInAppPurchaseLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchases) {
            queryParameters['fields[inAppPurchases]'] = requestParameters.fieldsInAppPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases/{id}/inAppPurchaseLocalizations`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => InAppPurchaseLocalizationsResponseFromJSON(jsonValue));
    }
    /**
     */
    async inAppPurchasesInAppPurchaseLocalizationsGetToManyRelated(requestParameters: InAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InAppPurchaseLocalizationsResponse> {
        const response = await this.inAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async inAppPurchasesPricePointsGetToManyRelatedRaw(requestParameters: InAppPurchasesPricePointsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InAppPurchasePricePointsResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling inAppPurchasesPricePointsGetToManyRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.filterPriceTier) {
            queryParameters['filter[priceTier]'] = requestParameters.filterPriceTier.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.filterTerritory) {
            queryParameters['filter[territory]'] = requestParameters.filterTerritory.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchasePricePoints) {
            queryParameters['fields[inAppPurchasePricePoints]'] = requestParameters.fieldsInAppPurchasePricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsTerritories) {
            queryParameters['fields[territories]'] = requestParameters.fieldsTerritories.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases/{id}/pricePoints`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => InAppPurchasePricePointsResponseFromJSON(jsonValue));
    }
    /**
     */
    async inAppPurchasesPricePointsGetToManyRelated(requestParameters: InAppPurchasesPricePointsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InAppPurchasePricePointsResponse> {
        const response = await this.inAppPurchasesPricePointsGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async inAppPurchasesPromotedPurchaseGetToOneRelatedRaw(requestParameters: InAppPurchasesPromotedPurchaseGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromotedPurchaseResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling inAppPurchasesPromotedPurchaseGetToOneRelated.');
        }
        const queryParameters: any = {};
        if (requestParameters.fieldsPromotedPurchases) {
            queryParameters['fields[promotedPurchases]'] = requestParameters.fieldsPromotedPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsSubscriptions) {
            queryParameters['fields[subscriptions]'] = requestParameters.fieldsSubscriptions.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsInAppPurchases) {
            queryParameters['fields[inAppPurchases]'] = requestParameters.fieldsInAppPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.fieldsPromotedPurchaseImages) {
            queryParameters['fields[promotedPurchaseImages]'] = requestParameters.fieldsPromotedPurchaseImages.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        if (requestParameters.limitPromotionImages !== undefined) {
            queryParameters['limit[promotionImages]'] = requestParameters.limitPromotionImages;
        }
        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases/{id}/promotedPurchase`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => PromotedPurchaseResponseFromJSON(jsonValue));
    }
    /**
     */
    async inAppPurchasesPromotedPurchaseGetToOneRelated(requestParameters: InAppPurchasesPromotedPurchaseGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromotedPurchaseResponse> {
        const response = await this.inAppPurchasesPromotedPurchaseGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     */
    async inAppPurchasesUpdateInstanceRaw(requestParameters: InAppPurchasesUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InAppPurchaseV2Response>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling inAppPurchasesUpdateInstance.');
        }
        if (requestParameters.inAppPurchaseV2UpdateRequest === null || requestParameters.inAppPurchaseV2UpdateRequest === undefined) {
            throw new runtime.RequiredError('inAppPurchaseV2UpdateRequest', 'Required parameter requestParameters.inAppPurchaseV2UpdateRequest was null or undefined when calling inAppPurchasesUpdateInstance.');
        }
        const queryParameters: any = {};
        const headerParameters: runtime.HTTPHeaders = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itcBearerToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v2/inAppPurchases/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: InAppPurchaseV2UpdateRequestToJSON(requestParameters.inAppPurchaseV2UpdateRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => InAppPurchaseV2ResponseFromJSON(jsonValue));
    }
    /**
     */
    async inAppPurchasesUpdateInstance(requestParameters: InAppPurchasesUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InAppPurchaseV2Response> {
        const response = await this.inAppPurchasesUpdateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
/**
 * @export
 */
export type InAppPurchasesAppStoreReviewScreenshotGetToOneRelatedFieldsInAppPurchaseAppStoreReviewScreenshotsEnum = 'assetDeliveryState' | 'assetToken' | 'assetType' | 'fileName' | 'fileSize' | 'imageAsset' | 'inAppPurchaseV2' | 'sourceFileChecksum' | 'uploadOperations' | 'uploaded';;
/**
 * @export
 */
export type InAppPurchasesAppStoreReviewScreenshotGetToOneRelatedFieldsInAppPurchasesEnum = 'app' | 'appStoreReviewScreenshot' | 'availableInAllTerritories' | 'content' | 'contentHosting' | 'familySharable' | 'iapPriceSchedule' | 'inAppPurchaseLocalizations' | 'inAppPurchaseType' | 'name' | 'pricePoints' | 'productId' | 'promotedPurchase' | 'reviewNote' | 'state';;
/**
 * @export
 */
export type InAppPurchasesAppStoreReviewScreenshotGetToOneRelatedIncludeEnum = 'inAppPurchaseV2';;
/**
 * @export
 */
export type InAppPurchasesContentGetToOneRelatedFieldsInAppPurchasesEnum = 'app' | 'appStoreReviewScreenshot' | 'availableInAllTerritories' | 'content' | 'contentHosting' | 'familySharable' | 'iapPriceSchedule' | 'inAppPurchaseLocalizations' | 'inAppPurchaseType' | 'name' | 'pricePoints' | 'productId' | 'promotedPurchase' | 'reviewNote' | 'state';;
/**
 * @export
 */
export type InAppPurchasesContentGetToOneRelatedFieldsInAppPurchaseContentsEnum = 'fileName' | 'fileSize' | 'inAppPurchaseV2' | 'lastModifiedDate' | 'url';;
/**
 * @export
 */
export type InAppPurchasesContentGetToOneRelatedIncludeEnum = 'inAppPurchaseV2';;
/**
 * @export
 */
export type InAppPurchasesGetInstanceFieldsInAppPurchasesEnum = 'app' | 'appStoreReviewScreenshot' | 'availableInAllTerritories' | 'content' | 'contentHosting' | 'familySharable' | 'iapPriceSchedule' | 'inAppPurchaseLocalizations' | 'inAppPurchaseType' | 'name' | 'pricePoints' | 'productId' | 'promotedPurchase' | 'reviewNote' | 'state';;
/**
 * @export
 */
export type InAppPurchasesGetInstanceIncludeEnum = 'appStoreReviewScreenshot' | 'content' | 'iapPriceSchedule' | 'inAppPurchaseLocalizations' | 'pricePoints' | 'promotedPurchase';;
/**
 * @export
 */
export type InAppPurchasesGetInstanceFieldsInAppPurchaseAppStoreReviewScreenshotsEnum = 'assetDeliveryState' | 'assetToken' | 'assetType' | 'fileName' | 'fileSize' | 'imageAsset' | 'inAppPurchaseV2' | 'sourceFileChecksum' | 'uploadOperations' | 'uploaded';;
/**
 * @export
 */
export type InAppPurchasesGetInstanceFieldsPromotedPurchasesEnum = 'app' | 'enabled' | 'inAppPurchaseV2' | 'promotionImages' | 'state' | 'subscription' | 'visibleForAllUsers';;
/**
 * @export
 */
export type InAppPurchasesGetInstanceFieldsInAppPurchasePricePointsEnum = 'customerPrice' | 'inAppPurchaseV2' | 'priceTier' | 'proceeds' | 'territory';;
/**
 * @export
 */
export type InAppPurchasesGetInstanceFieldsInAppPurchaseLocalizationsEnum = 'description' | 'inAppPurchaseV2' | 'locale' | 'name' | 'state';;
/**
 * @export
 */
export type InAppPurchasesGetInstanceFieldsInAppPurchasePriceSchedulesEnum = 'automaticPrices' | 'baseTerritory' | 'inAppPurchase' | 'manualPrices';;
/**
 * @export
 */
export type InAppPurchasesGetInstanceFieldsInAppPurchaseContentsEnum = 'fileName' | 'fileSize' | 'inAppPurchaseV2' | 'lastModifiedDate' | 'url';;
/**
 * @export
 */
export type InAppPurchasesIapPriceScheduleGetToOneRelatedFieldsInAppPurchasePricesEnum = 'endDate' | 'inAppPurchasePricePoint' | 'inAppPurchaseV2' | 'manual' | 'startDate' | 'territory';;
/**
 * @export
 */
export type InAppPurchasesIapPriceScheduleGetToOneRelatedFieldsInAppPurchasesEnum = 'app' | 'appStoreReviewScreenshot' | 'availableInAllTerritories' | 'content' | 'contentHosting' | 'familySharable' | 'iapPriceSchedule' | 'inAppPurchaseLocalizations' | 'inAppPurchaseType' | 'name' | 'pricePoints' | 'productId' | 'promotedPurchase' | 'reviewNote' | 'state';;
/**
 * @export
 */
export type InAppPurchasesIapPriceScheduleGetToOneRelatedFieldsInAppPurchasePriceSchedulesEnum = 'automaticPrices' | 'baseTerritory' | 'inAppPurchase' | 'manualPrices';;
/**
 * @export
 */
export type InAppPurchasesIapPriceScheduleGetToOneRelatedFieldsTerritoriesEnum = 'currency';;
/**
 * @export
 */
export type InAppPurchasesIapPriceScheduleGetToOneRelatedIncludeEnum = 'automaticPrices' | 'baseTerritory' | 'inAppPurchase' | 'manualPrices';;
/**
 * @export
 */
export type InAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedFieldsInAppPurchaseLocalizationsEnum = 'description' | 'inAppPurchaseV2' | 'locale' | 'name' | 'state';;
/**
 * @export
 */
export type InAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedFieldsInAppPurchasesEnum = 'app' | 'appStoreReviewScreenshot' | 'availableInAllTerritories' | 'content' | 'contentHosting' | 'familySharable' | 'iapPriceSchedule' | 'inAppPurchaseLocalizations' | 'inAppPurchaseType' | 'name' | 'pricePoints' | 'productId' | 'promotedPurchase' | 'reviewNote' | 'state';;
/**
 * @export
 */
export type InAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedIncludeEnum = 'inAppPurchaseV2';;
/**
 * @export
 */
export type InAppPurchasesPricePointsGetToManyRelatedFieldsInAppPurchasePricePointsEnum = 'customerPrice' | 'inAppPurchaseV2' | 'priceTier' | 'proceeds' | 'territory';;
/**
 * @export
 */
export type InAppPurchasesPricePointsGetToManyRelatedFieldsTerritoriesEnum = 'currency';;
/**
 * @export
 */
export type InAppPurchasesPricePointsGetToManyRelatedIncludeEnum = 'territory';;
/**
 * @export
 */
export type InAppPurchasesPromotedPurchaseGetToOneRelatedFieldsPromotedPurchasesEnum = 'app' | 'enabled' | 'inAppPurchaseV2' | 'promotionImages' | 'state' | 'subscription' | 'visibleForAllUsers';;
/**
 * @export
 */
export type InAppPurchasesPromotedPurchaseGetToOneRelatedFieldsSubscriptionsEnum = 'appStoreReviewScreenshot' | 'availableInAllTerritories' | 'familySharable' | 'group' | 'groupLevel' | 'introductoryOffers' | 'name' | 'offerCodes' | 'pricePoints' | 'prices' | 'productId' | 'promotedPurchase' | 'promotionalOffers' | 'reviewNote' | 'state' | 'subscriptionLocalizations' | 'subscriptionPeriod';;
/**
 * @export
 */
export type InAppPurchasesPromotedPurchaseGetToOneRelatedFieldsInAppPurchasesEnum = 'app' | 'appStoreReviewScreenshot' | 'availableInAllTerritories' | 'content' | 'contentHosting' | 'familySharable' | 'iapPriceSchedule' | 'inAppPurchaseLocalizations' | 'inAppPurchaseType' | 'name' | 'pricePoints' | 'productId' | 'promotedPurchase' | 'reviewNote' | 'state';;
/**
 * @export
 */
export type InAppPurchasesPromotedPurchaseGetToOneRelatedFieldsPromotedPurchaseImagesEnum = 'assetToken' | 'assetType' | 'fileName' | 'fileSize' | 'imageAsset' | 'promotedPurchase' | 'sourceFileChecksum' | 'state' | 'uploadOperations' | 'uploaded';;
/**
 * @export
 */
export type InAppPurchasesPromotedPurchaseGetToOneRelatedIncludeEnum = 'inAppPurchaseV2' | 'promotionImages' | 'subscription';;
